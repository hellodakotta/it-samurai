{"version":3,"file":"static/js/350.719299c2.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/common/UserSocialsIcon/UserSocialsIcon.module.css?dff1","components/common/UserSocialsIcon/UserSocialsIcon.jsx","webpack://my-app/./src/components/Profile/ProfileStatus/ProfileStatus.module.css?1f32","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.module.css","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostFormikForm/PostFormikForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.js","webpack://my-app/./src/components/Profile/MyPosts/PostFormikForm/PostFormikForm.module.css?f7a8"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"aboutMe\":\"ProfileInfo_aboutMe__J4h-1\",\"job_desc\":\"ProfileInfo_job_desc__mu5bf\",\"contacts\":\"ProfileInfo_contacts__xDxqh\"};","// extracted by mini-css-extract-plugin\nexport default {\"socialIcon\":\"UserSocialsIcon_socialIcon__Kxw0S\"};","import React from \"react\";\r\nimport s from './UserSocialsIcon.module.css';\r\n\r\nlet UserSocialsIcon = (props) => {\r\n    return (\r\n        <img className={s.socialIcon} src={`${process.env.PUBLIC_URL}/images/socials-${props.iconType}.png`}/>\r\n    )\r\n}\r\n\r\nexport default UserSocialsIcon","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__xci1V\",\"statusLabel\":\"ProfileStatus_statusLabel__kURX-\"};","import React, {useEffect, useState} from 'react';\n\nimport s from './ProfileStatus.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateMode = () => {\n        setEditMode(true);\n    }\n\n    let onStatusInputFocus = () => {\n        setEditMode(true);\n    }\n\n    let onChangeStatusText = (text) => {\n        setStatus(text);\n    }\n\n    let onStatusInputBlur = (text) => {\n\n        setStatus(text);\n        props.saveStatus(text);\n        setEditMode(false);\n    }\n\n    let onStatusLabelClick = () => {\n\n        setEditMode(true);\n    }\n\n\n    return (\n        <div>\n            {!props.paramsUserId && editMode &&\n                <div>\n                    <input  type=\"text\"\n                            autoFocus={true}\n                            onChange={(e) => {onChangeStatusText(e.target.value)}}\n                            onFocus={onStatusInputFocus}\n                            onBlur={(e) => {onStatusInputBlur(e.target.value)}}\n                            value={status}/>\n\n                </div>\n            }\n\n            {!editMode &&\n            <div onClick={!props.paramsUserId?activateMode:null} className={s.status}>\n                {props.status || '--------------'}\n            </div>\n            }\n\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport UserSocialsIcon from \"../../common/UserSocialsIcon/UserSocialsIcon\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profileInfo ) {\r\n        return <div><Preloader /></div>\r\n    }\r\n    let contacts = props.profileInfo.contacts;\r\n\r\n    let contactsHtml = Object.keys(contacts).map((key, index) => {\r\n\r\n        if (contacts[key]) {\r\n            return(\r\n                <a href={`${contacts[key]}`} key={index}><UserSocialsIcon iconType={key} /></a>\r\n            );\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            {props.profileInfo.photos.large ? <div className={s.userpic}>\r\n                <img src={props.profileInfo.photos.large} alt=\"\"/>\r\n            </div> : ''}\r\n\r\n            <h2>{props.profileInfo.fullName}</h2>\r\n\r\n            <ProfileStatusWithHooks {...props} />\r\n\r\n            {props.profileInfo.aboutMe ? <div className={s.aboutMe}>{props.profileInfo.aboutMe}</div> : ''}\r\n            <div>\r\n                <div>{props.profileInfo.lookingForAJob ? <div>Ищу работу!</div> : 'Не ищу работу.'}</div>\r\n\r\n                    {props.profileInfo.lookingForAJob && props.profileInfo.lookingForAJobDescription ?\r\n                        <div className={s.job_desc}>&mdash; {props.profileInfo.lookingForAJobDescription}</div>: ''}\r\n            </div>\r\n            <div className={s.contacts}>\r\n                {contactsHtml}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__QxERF\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KN6RN\",\"userpic\":\"Post_userpic__Eqgfb\",\"message\":\"Post_message__F7sI4\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.userpic}>\r\n                <div><img alt='' src={process.env.PUBLIC_URL + '/images/userpic2.jpg' } /></div>\r\n                <div>Like {props.likeCount}</div>\r\n            </div>\r\n            <div className={s.message}>{props.message}</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport s from './PostFormikForm.module.css';\r\n\r\nconst AddPostFormSchema = Yup.object().shape({\r\n    text: Yup.string()\r\n        .min(3, 'Too Short!')\r\n        .max(50, 'Maximum 50 characters')\r\n        .required('Required')\r\n});\r\n\r\nconst PostFormikForm = (props) => (\r\n    <div>\r\n        <Formik\r\n            initialValues={{\r\n                text: ''\r\n            }\r\n            }\r\n            // validate={values => {\r\n            //     const errors = {};\r\n            //     if (!values.text) {\r\n            //         errors.text = 'Required';\r\n            //     }\r\n            //     return errors;\r\n            // }}\r\n            validationSchema={AddPostFormSchema}\r\n            onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                setTimeout(() => {\r\n                    props.addPost(values.text);\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                    resetForm();\r\n                }, 400);\r\n            }}\r\n        >\r\n            {({errors, isSubmitting}) => (\r\n                <Form>\r\n                    <div className={errors.text ? s.hasError : ''}>\r\n                        <Field maxLength={50} as={'textarea'} name=\"text\" placeholder={'Type your post...'}/>\r\n                        <ErrorMessage className={s.errorMessage} name=\"text\" component=\"div\"/>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={errors.text || isSubmitting}>\r\n                        Add post\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n);\r\n\r\nexport default PostFormikForm;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport PostFormikForm from \"./PostFormikForm/PostFormikForm\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let posts = props.posts;\r\n\r\n    var postsItems = posts.map(post => (\r\n        <Post key={post.id} likeCount={post.likesCount} message={post.message}/>\r\n    ));\r\nconsole.log(\"POSTS RENDER\")\r\n\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <PostFormikForm addPost={props.addPost} />\r\n\r\n            <h4>My Posts</h4>\r\n\r\n            {postsItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        isFetching: state.profilePage.isFetching,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = ({userId, status, profileInfo, saveStatus}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                userId={userId}\r\n                status={status}\r\n                profileInfo={profileInfo}\r\n                saveStatus={saveStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {initializeProfile, saveStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"../../hoc/withRouter\";\r\nimport {compose} from \"redux\";\r\nimport {Navigate} from \"react-router\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    state = {\r\n        profileInfo: this.props.profileInfo,\r\n        status: this.props.status,\r\n        userId: this.props.userId,\r\n        isProfileInitialized: this.props.isProfileInitialized,\r\n    }\r\n    componentDidMount() {\r\n        let router = this.props.router;\r\n        let params = router.params;\r\n\r\n        let userId = params.userId\r\n            ? params.userId\r\n            : (this.props.userId ? this.props.userId : null );\r\n\r\n        if (userId) {\r\n            this.props.initializeProfile(userId);\r\n        }\r\n\r\n        this.setState({\r\n            userId: userId\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let router = this.props.router;\r\n        let params = router.params;\r\n        if (!this.props.userId && !params.userId) {\r\n            return <Navigate to={'/login/'} />\r\n        }\r\n        if (!this.props.isProfileInitialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <Profile {...this.props}\r\n                     saveStatus={this.props.saveStatus}\r\n                     profileInfo={this.props.profileInfo}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileInfo: state.profilePage.profileInfo,\r\n        status: state.profilePage.status,\r\n        userId: state.userAuth.userId,\r\n        isProfileInitialized: state.profilePage.isProfileInitialized\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {initializeProfile, saveStatus}),\r\n    //withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n","import React from \"react\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router\";\r\n\r\nexport const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props){\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}} />\r\n        )\r\n    }\r\n    return ComponentWithRouterProp\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"hasError\":\"PostFormikForm_hasError__ghqmK\",\"errorMessage\":\"PostFormikForm_errorMessage__ox7wD\"};"],"names":["props","className","s","src","process","iconType","useState","editMode","setEditMode","status","setStatus","useEffect","paramsUserId","type","autoFocus","onChange","e","text","target","value","onFocus","onBlur","saveStatus","onClick","profileInfo","Preloader","contacts","contactsHtml","Object","keys","map","key","index","href","photos","large","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","likeCount","message","AddPostFormSchema","Yup","shape","min","max","required","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","setTimeout","addPost","alert","JSON","stringify","errors","isSubmitting","maxLength","as","name","placeholder","component","disabled","postsItems","posts","post","likesCount","id","console","log","connect","state","profilePage","isFetching","newPostText","MyPosts","userId","ProfileContainer","isProfileInitialized","params","this","router","initializeProfile","setState","to","React","compose","userAuth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}