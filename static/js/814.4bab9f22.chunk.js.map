{"version":3,"file":"static/js/814.4bab9f22.chunk.js","mappings":"mLACA,GAAgB,eAAiB,gCAAgC,cAAgB,+BAA+B,eAAiB,gCAAgC,OAAS,wBAAwB,QAAU,0B,mBCgB5M,EAXmB,SAACA,GAChB,OACI,0BACI,SAAC,KAAD,CAASC,UAAW,SAAAC,GAAO,OAAIA,EAAQC,SAAR,UAAsBC,EAAAA,KAAtB,YAAgCA,EAAAA,QAAaA,EAAAA,IAAjD,EAClBC,GAAE,kBAAaL,EAAMM,IAD9B,SAEKN,EAAMO,QAItB,ECdD,GAAgB,QAAU,6BAA6B,KAAO,0BAA0B,MAAQ,2BAA2B,QAAU,8BCyBrI,EApBoB,SAACP,GACrB,IAAIQ,EAAUR,EAAMQ,QAEZC,EAAe,OAKnB,OANoB,IAEhBD,EAAQE,UACRD,EAAe,UAIf,iBAAKR,UAAS,UAAKG,EAAAA,QAAL,YAAkBA,EAAEK,IAAlC,WACI,gBAAKR,UAAWG,EAAAA,QAAhB,UACI,gBAAKO,IAAI,GAAGC,IAAKC,6BAA6CL,EAAQE,QAAS,YAEnF,gBAAKT,UAAWG,EAAAA,KAAhB,SACKI,EAAQM,SAIxB,E,oBCwBD,EA3C0B,SAACd,GAAD,OAEtB,0BACI,SAAC,KAAD,CACIe,cAAe,CACXP,QAAS,IAGbQ,SAAU,SAAAC,GACN,IAAMC,EAAS,CAAC,EAKhB,OAHKD,EAAOT,UACRU,EAAOV,QAAU,YAEdU,CACV,EACDC,SAAU,SAACF,EAAD,GAAyC,IAA/BG,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC/BC,YAAW,WACPC,QAAQC,IAAIxB,GACZA,EAAMyB,WAAWR,EAAOT,QAASR,EAAM0B,QACvCC,MAAMC,KAAKC,UAAUZ,EAAQ,KAAM,IACnCG,GAAc,GACdC,EAAU,CAACJ,OAAQ,IACtB,GAAE,IACN,EArBL,SAuBK,gBAAEa,EAAF,EAAEA,aAAF,OACG,UAAC,KAAD,YACI,4BACI,SAAC,KAAD,CAAOC,GAAI,WAAYxB,KAAK,UAAUyB,YAAa,0BACnD,SAAC,KAAD,CAAczB,KAAK,UAAU0B,UAAU,YAG3C,mBAAQC,KAAK,SAASC,SAAUL,EAAhC,2BAPP,KA1Ba,E,UCwC1B,EArCgB,SAAC9B,GAEb,IAAIoC,EAAUpC,EAAMqC,YAAYD,QAC5BE,EAAWtC,EAAMqC,YAAYC,SAE7BC,EAAkBH,EAAQI,KAAI,SAAAC,GAAC,OAC/B,SAAC,EAAD,CAAuBnC,GAAImC,EAAEnC,GAAIC,KAAMkC,EAAElC,MAAxBkC,EAAEnC,GADY,IAI/BoC,EAAmBJ,EAASE,KAAI,SAAAG,GAAC,OACjC,SAAC,EAAD,CAAwBnC,QAASmC,GAAfA,EAAErC,GADa,IAIjCsC,GAAWC,EAAAA,EAAAA,MAOf,OANAC,EAAAA,EAAAA,YAAU,WACN,IAAI9C,EAAM+C,OACN,OAAOH,EAAS,SAEvB,GAAE,CAAC5C,EAAM+C,UAGN,SAAC,WAAD,CAAgBC,UAAU,SAACC,EAAA,EAAD,IAA1B,UACA,iBAAKhD,UAAWG,EAAAA,eAAhB,WACI,gBAAKH,UAAWG,EAAAA,cAAhB,SACKmC,KAEL,iBAAKtC,UAAWG,EAAAA,eAAhB,UACKsC,GAED,SAAC,GAAD,UAAuB1C,WAMtC,E,8BCzBD,GAAekD,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KATkB,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,YACnBU,OAAQK,EAAMC,SAASN,OACvBrB,OAAQ0B,EAAMC,SAAS3B,OAE9B,GAG4B,CACrBD,WAAY6B,EAAAA,KAEhBC,EAAAA,EAJJ,CAKEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/Dialogs/Message/MessageItem.module.css?a146","components/Dialogs/Message/MessageItem.jsx","components/Dialogs/Form/DialogsFormikForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsContent\":\"Dialogs_dialogsContent__vnbdl\",\"dialogsColumn\":\"Dialogs_dialogsColumn__h5AKV\",\"messagesColumn\":\"Dialogs_messagesColumn__vR3Vn\",\"active\":\"Dialogs_active__cxRtB\",\"message\":\"Dialogs_message__Ifi0-\"};","import React from 'react';\r\n\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink className={navData => navData.isActive ? `${s.item} ${s.active}` : s.item}\r\n                     to={`dialogs/${props.id}`}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__Ldrqg\",\"left\":\"MessageItem_left__CSBt9\",\"right\":\"MessageItem_right__3AoMe\",\"userpic\":\"MessageItem_userpic__hGp+U\"};","import React from 'react';\r\n\r\nimport s from './MessageItem.module.css';\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\nlet message = props.message;\r\n    let currentUserId = 1;\r\n    let messageClass = 'left';\r\n    if (message.user_id === currentUserId) {\r\n        messageClass = 'right';\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.message} ${s[messageClass]}`}>\r\n            <div className={s.userpic}>\r\n                <img alt=\"\" src={process.env.PUBLIC_URL + '/images/userpic' + message.user_id +'.jpg' } />\r\n            </div>\r\n            <div className={s.text}>\r\n                {message.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './DialogsFormikForm.module.css';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\n\r\n\r\nconst DialogsFormikForm = (props) => (\r\n\r\n    <div>\r\n        <Formik\r\n            initialValues={{\r\n                message: ''\r\n            }\r\n            }\r\n            validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.message) {\r\n                    errors.message = 'Required';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                setTimeout(() => {\r\n                    console.log(props)\r\n                    props.addMessage(values.message, props.userId);\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                    resetForm({values: ''})\r\n                }, 400);\r\n            }}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field as={'textarea'} name=\"message\" placeholder={'Type your message...'}/>\r\n                        <ErrorMessage name=\"message\" component=\"div\"/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Add Message\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n);\r\n\r\n\r\nexport default DialogsFormikForm;","import React, {useEffect} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport {useNavigate} from \"react-router\";\r\nimport DialogsFormikForm from \"./Form/DialogsFormikForm\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs = props.dialogsPage.dialogs;\r\n    let messages = props.dialogsPage.messages;\r\n\r\n    let dialogsElements = dialogs.map(d =>\r\n        <DialogItem key={d.id} id={d.id} name={d.name}/>\r\n    );\r\n\r\n    let messagesElements = messages.map(m =>\r\n        <MessageItem key={m.id} message={m}/>\r\n    );\r\n\r\n    let navigate = useNavigate()\r\n    useEffect(()=>{\r\n        if(!props.isAuth){\r\n            return navigate(\"/login\")\r\n        }\r\n    }, [props.isAuth])\r\n\r\n    return (\r\n        <React.Suspense fallback={<Preloader />}>\r\n        <div className={s.dialogsContent}>\r\n            <div className={s.dialogsColumn}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messagesColumn}>\r\n                {messagesElements}\r\n\r\n                <DialogsFormikForm {...props} />\r\n\r\n            </div>\r\n        </div>\r\n        </React.Suspense>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\n\r\nimport {addMessageCreator, updateMessageTextCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.userAuth.isAuth,\r\n        userId: state.userAuth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addMessage: addMessageCreator\r\n    }),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","className","navData","isActive","s","to","id","name","message","messageClass","user_id","alt","src","process","text","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","setTimeout","console","log","addMessage","userId","alert","JSON","stringify","isSubmitting","as","placeholder","component","type","disabled","dialogs","dialogsPage","messages","dialogsElements","map","d","messagesElements","m","navigate","useNavigate","useEffect","isAuth","fallback","Preloader","compose","connect","state","userAuth","addMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}